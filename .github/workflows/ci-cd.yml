name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Dependency Audit
        run: npm audit --audit-level=high

      - name: Build Docker Image
        run: docker build -t myapp:${{ github.sha }} .

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: myapp:${{ github.sha }}

      - name: Push to GHCR
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }} 
          IMAGE_NAME=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]' | tr '_' '-')
          
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          docker tag myapp:${{ github.sha }} $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:${{ github.sha }}


  deploy:
    runs-on: ubuntu-latest
    needs: build-test-scan
    steps:
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/develop'
        run: echo "ðŸš€ Deploying from Docker image to staging..."

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: echo "ðŸš€ Deploying from Docker image to production..."
